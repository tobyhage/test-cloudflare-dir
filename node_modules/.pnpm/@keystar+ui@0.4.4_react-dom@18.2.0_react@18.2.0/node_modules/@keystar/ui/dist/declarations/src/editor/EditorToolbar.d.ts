import { AriaLabelingProps, ValueBase } from '@react-types/shared';
import { ToggleButtonProps } from "../../button/dist/keystar-ui-button.cjs.js";
import { Key, PropsWithChildren, ReactNode } from 'react';
type EditorToolbarProps = PropsWithChildren<{}> & AriaLabelingProps;
export declare function EditorToolbar(props: EditorToolbarProps): import("react").JSX.Element;
export type SelectionMode = 'none' | 'single' | 'multiple';
type EditorToolbarGroupProps = AriaLabelingProps & {
    /** The contents of the group. */
    children?: ReactNode;
} & (({
    selectionMode: 'multiple';
} & ValueBase<Key[]>) | ({
    selectionMode: 'single';
} & ValueBase<Key | null>) | {
    selectionMode?: 'none';
});
export declare function EditorToolbarGroup(props: EditorToolbarGroupProps): import("react").JSX.Element;
type EditorToolbarItemProps = {
    /** The contents of the item. */
    children?: ReactNode;
    /** Whether the item is disabled. */
    isDisabled?: boolean;
    /** The value of the item. */
    value: Key;
};
/** A toolbar item may be a checkbox/radio/toggle button, depending on context. */
export declare function EditorToolbarItem(props: EditorToolbarItemProps): import("react").JSX.Element;
type EditorToolbarButtonProps = Omit<ToggleButtonProps, 'prominence'>;
export declare function EditorToolbarButton(props: EditorToolbarButtonProps): import("react").JSX.Element;
export declare function EditorToolbarSeparator(): import("react").JSX.Element;
export {};
